{"version":3,"file":"vue-wc-wrapper.global.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["const camelizeRE = /-(\\w)/g\nexport const camelize = (str) => {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\n}\n\nconst hyphenateRE = /\\B([A-Z])/g\nexport const hyphenate = (str) => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n}\n\nexport function getInitialProps(propsList) {\n  const res = {}\n  propsList.forEach((key) => {\n    res[key] = undefined\n  })\n  return res\n}\n\nexport function cloneElementsToShadowRoot(shadowRoot, elements) {\n  elements.forEach((el) => shadowRoot.appendChild(el.cloneNode(true)))\n}\n\nexport function getAllStyles(target, selector, filter) {\n  const elements = Array.prototype.slice.call(target.querySelectorAll(selector))\n\n  return filter ? elements.filter(filter) : elements\n}\n\nexport function observeStyleChanges(\n  callback,\n  target,\n  selector,\n  filter,\n  observeOptions\n) {\n  return new MutationObserver((mutations, observer) => {\n    mutations.forEach((mutation) => {\n      const matchedElements = Array.prototype.slice\n        .call(mutation.addedNodes)\n        .filter((node) => node.matches && node.matches(selector))\n\n      if (matchedElements.length > 0) {\n        callback(filter ? matchedElements.filter(filter) : matchedElements)\n      }\n    })\n  }).observe(target, observeOptions)\n}\n\nexport function injectHook(options, key, hook) {\n  options[key] = [].concat(options[key] || [])\n  options[key].unshift(hook)\n}\n\nexport function callHooks(vm, hook) {\n  if (vm) {\n    const hooks = vm.$options[hook] || []\n    hooks.forEach((hook) => {\n      hook.call(vm)\n    })\n  }\n}\n\nexport function createCustomEvent(name, args) {\n  return new CustomEvent(name, {\n    bubbles: false,\n    cancelable: false,\n    detail: args\n  })\n}\n\nconst isBoolean = (val) => /function Boolean/.test(String(val))\nconst isNumber = (val) => /function Number/.test(String(val))\n\nexport function convertAttributeValue(value, name, { type } = {}) {\n  if (name.endsWith('-json')) {\n    try {\n      return JSON.parse(value)\n    } catch (e) {\n      return 'INVALID_JSON'\n    }\n  } else if (isBoolean(type)) {\n    if (value === 'true' || value === 'false') {\n      return value === 'true'\n    }\n    if (value === '' || value === name) {\n      return true\n    }\n    return value != null\n  } else if (isNumber(type)) {\n    const parsed = parseFloat(value, 10)\n    return isNaN(parsed) ? value : parsed\n  } else {\n    return value\n  }\n}\n\nexport function toVNodes(h, children) {\n  const res = []\n  for (let i = 0, l = children.length; i < l; i++) {\n    res.push(toVNode(h, children[i]))\n  }\n  return res\n}\n\nfunction toVNode(h, node) {\n  if (node.nodeType === 3) {\n    return node.data.trim() ? node.data : null\n  } else if (node.nodeType === 1) {\n    const data = {\n      attrs: getAttributes(node),\n      domProps: {\n        innerHTML: node.innerHTML\n      }\n    }\n    if (data.attrs.slot) {\n      data.slot = data.attrs.slot\n      delete data.attrs.slot\n    }\n    return h(node.tagName, data)\n  } else {\n    return null\n  }\n}\n\nfunction getAttributes(node) {\n  const res = {}\n  for (let i = 0, l = node.attributes.length; i < l; i++) {\n    const attr = node.attributes[i]\n    res[attr.nodeName] = attr.nodeValue\n  }\n  return res\n}\n","import {\n  toVNodes,\n  camelize,\n  hyphenate,\n  callHooks,\n  injectHook,\n  getInitialProps,\n  createCustomEvent,\n  convertAttributeValue,\n  cloneElementsToShadowRoot,\n  getAllStyles,\n  observeStyleChanges\n} from './utils.js'\n\nexport default function wrap(Vue, Component, wrapOptions = {}) {\n  const isAsync = typeof Component === 'function' && !Component.cid\n  let isInitialized = false\n  let hyphenatedPropsList\n  let camelizedPropsList\n  let camelizedPropsMap\n\n  if (wrapOptions.globalStyles) {\n    const defaults = {\n      target: document.head,\n      selector:\n        'style, link[rel=\"stylesheet\"], link[rel=\"preload\"][as=\"style\"]',\n      filter: undefined,\n      observeOptions: { childList: true, subtree: true }\n    }\n\n    wrapOptions.globalStyles = {\n      ...defaults,\n      ...wrapOptions.globalStyles\n    }\n  }\n\n  function initialize(Component) {\n    if (isInitialized) return\n\n    const options =\n      typeof Component === 'function' ? Component.options : Component\n\n    // extract props info\n    let propsList = Array.isArray(options.props)\n      ? options.props\n      : Object.keys(options.props || {})\n\n    if (wrapOptions.jsonMapping) {\n      // add the json props\n\n      const shouldBeSerializable = (type) => type === Array || type === Object\n\n      let jsonProps = {}\n      if (!Array.isArray(options.props || {})) {\n        // create -json serializable props based on existing props\n        jsonProps = Object.keys(options.props || {}).reduce(\n          (coll = {}, propName) => {\n            const sourceProp = (options.props || {})[propName]\n\n            if (sourceProp === undefined) {\n              return coll\n            }\n\n            const type = 'type' in sourceProp ? sourceProp.type : sourceProp\n\n            if (shouldBeSerializable(type)) {\n              coll[propName + 'Json'] = {\n                type: String\n              }\n            }\n\n            return coll\n          },\n          {}\n        )\n      }\n\n      propsList = propsList.concat(Object.keys(jsonProps))\n    }\n\n    hyphenatedPropsList = propsList.map(hyphenate)\n    camelizedPropsList = propsList.map(camelize)\n    const originalPropsAsObject = Array.isArray(options.props)\n      ? {}\n      : options.props || {}\n    camelizedPropsMap = camelizedPropsList.reduce((map, key, i) => {\n      map[key] = originalPropsAsObject[propsList[i]]\n      return map\n    }, {})\n\n    // proxy $emit to native DOM events\n    injectHook(options, 'beforeCreate', function () {\n      const emit = this.$emit\n      this.$emit = (name, ...args) => {\n        this.$root.$options.customElement.dispatchEvent(\n          createCustomEvent(name, args)\n        )\n        return emit.call(this, name, ...args)\n      }\n    })\n\n    injectHook(options, 'created', function () {\n      // sync default props values to wrapper on created\n      camelizedPropsList.forEach((key) => {\n        this.$root.props[key] = this[key]\n      })\n    })\n\n    // proxy props as Element properties\n    camelizedPropsList.forEach((key) => {\n      Object.defineProperty(CustomElement.prototype, key, {\n        get() {\n          return this._wrapper.props[key]\n        },\n        set(newVal) {\n          this._wrapper.props[key] = newVal\n        },\n        enumerable: false,\n        configurable: true\n      })\n    })\n\n    isInitialized = true\n  }\n\n  function syncAttribute(el, key) {\n    const jsonSuffixed = key.endsWith('-json')\n    const camelized = camelize(key.replace(/-json$/, ''))\n\n    const value = el.hasAttribute(key) ? el.getAttribute(key) : undefined\n\n    // we don't want an undefined json suffix to override the normal prop value (if any)\n    if (!jsonSuffixed || value) {\n      el._wrapper.props[camelized] = convertAttributeValue(\n        value,\n        key,\n        camelizedPropsMap[camelized]\n      )\n    }\n  }\n\n  class CustomElement extends HTMLElement {\n    initShadyDOMCompatability() {\n      // MutationObserver does not work inside shadowRoot when polyfilled with ShadyDOM\n      // this makes slot changes go unrecognized by our usage of MutationObserver\n      // https://github.com/webcomponents/polyfills/issues/81\n\n      // ShadyDOM has a function called ShadyDOM.childrenObserver but it doesn't do the job very thoroughly, as it\n      // cannot recognize changes in slots when the slot count hasn't changed, and seemingly doesn't recognized removal of elements (https://github.com/webcomponents/polyfills/issues/82)\n      // .. what it can do for us however, is to observe whether slots are ever added.\n      // once a slot is added, we'll apply the hack to this wrapper.\n      // if slots are never used, we're saving ourselves some performance cost.\n      window.ShadyDOM.observeChildren(this, () => {\n        if (!this._wrapper.ShadyDOMSlotsHack_slotsPassedToWrapper) {\n          this._wrapper.ShadyDOMSlotsHack_slotsPassedToWrapper = true\n        }\n      })\n\n      // Here is the ugly fix to work around the core issue, basically setInterval, but shared across all vue wc wrappers for performance\n      // we preserve the original MutationObserver code further down, because it observes all other changes for us.\n      window.ShadyDOMSlotsHack_setInterval =\n        window.ShadyDOMSlotsHack_setInterval ||\n        // eslint-disable-next-line no-extra-parens\n        new (function () {\n          this.listeners = []\n\n          this.add = (handler) => {\n            const id = Math.floor(Math.random() * 1000000)\n            this.listeners.push({\n              handler,\n              id\n            })\n\n            if (this.listeners.length === 1) {\n              // first entry added, start setInterval\n              this.start()\n            }\n            return id\n          }\n\n          this.remove = (idToRemove) => {\n            this.listeners.splice(\n              this.listeners.findIndex(({ id }) => id === idToRemove),\n              1\n            )\n\n            if (this.listeners.length === 0) {\n              // no entries left, stop setInterval\n              this.stop()\n            }\n          }\n\n          this.start = () => {\n            if (this.intervalId === undefined || this.intervalId === null) {\n              this.intervalId = window.setInterval(() => {\n                this.listeners.forEach(({ handler }) => handler())\n              }, 100)\n            }\n          }\n\n          this.stop = () => {\n            if (this.intervalId) {\n              window.clearInterval(this.intervalId)\n              this.intervalId = null\n            }\n          }\n        })()\n\n      const id = window.ShadyDOMSlotsHack_setInterval.add(() => {\n        if (this._wrapper.ShadyDOMSlotsHack_slotsPassedToWrapper) {\n          // slots were added to the wrapper at some point, so update children at every interval\n          this.updateSlotChildren()\n        }\n      })\n\n      this._wrapper.ShadyDOMSlotsHack_deregisterSetIntervalListener = () =>\n        window.ShadyDOMSlotsHack_setInterval.remove(id)\n    }\n\n    init() {\n      const self = this\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' })\n      }\n\n      this._wrapper = self._wrapper = new Vue({\n        name: 'shadow-root',\n        customElement: self,\n        shadowRoot: this.shadowRoot,\n        data() {\n          return {\n            props: {},\n            slotChildren: [],\n            ShadyDOMSlotsHack_slotsPassedToWrapper: false,\n            ShadyDOMSlotsHack_deregisterSetIntervalListener: null\n          }\n        },\n        render(h) {\n          return h(\n            Component,\n            {\n              ref: 'inner',\n              props: this.props\n            },\n            this.slotChildren\n          )\n        }\n      })\n\n      // options can be passed to ShadyDOM in window, so check for a relevant polyfill method as well.\n      if (window.ShadyDOM && window.ShadyDOM.observeChildren) {\n        this.initShadyDOMCompatability()\n      }\n\n      // Use MutationObserver to react to future attribute & slot content change\n      const observer = new MutationObserver((mutations) => {\n        let hasChildrenChange = false\n        for (let i = 0; i < mutations.length; i++) {\n          const m = mutations[i]\n          if (isInitialized && m.type === 'attributes' && m.target === self) {\n            syncAttribute(self, m.attributeName)\n          } else {\n            hasChildrenChange = true\n          }\n        }\n        if (hasChildrenChange) {\n          this.updateSlotChildren()\n        }\n      })\n      observer.observe(self, {\n        childList: true,\n        subtree: true,\n        characterData: true,\n        attributes: true\n      })\n    }\n\n    get vueComponent() {\n      return this._wrapper.$refs.inner\n    }\n\n    updateSlotChildren() {\n      this._wrapper.slotChildren = Object.freeze(\n        toVNodes(this._wrapper.$createElement, this.childNodes)\n      )\n\n      if (this._wrapper.slotChildren.length === 0) {\n        // no slots present, revert the shadyDOM hack (if present)\n        this._wrapper.ShadyDOMSlotsHack_slotsPassedToWrapper = false\n      }\n    }\n\n    async connectedCallback() {\n      // TODO: Vue's router will be instantiated immediately, before the router\n      // in `mover-app` has finished transitioning URLs, making the Vue router\n      // resolve the wrong URL. Wait one micro-task to allow `mover-app`'s\n      // router to finish transitioning.\n      await Promise.resolve()\n\n      if (!this.initDone) {\n        this.initDone = true\n        this.init()\n      }\n\n      if (!this._wrapper._isMounted) {\n        // initialize attributes\n        const syncInitialAttributes = () => {\n          this._wrapper.props = getInitialProps(camelizedPropsList)\n          hyphenatedPropsList.forEach((key) => {\n            syncAttribute(this, key)\n          })\n        }\n\n        if (isInitialized) {\n          syncInitialAttributes()\n        } else {\n          // async & unresolved\n          Component().then((resolved) => {\n            if (\n              resolved.__esModule ||\n              // assume userland has polyfilled this\n              // eslint-disable-next-line\n              resolved[Symbol.toStringTag] === 'Module'\n            ) {\n              resolved = resolved.default\n            }\n            initialize(resolved)\n            syncInitialAttributes()\n          })\n        }\n        // initialize children\n        this.updateSlotChildren()\n\n        // doing this will let us access the shadow root via `this.$root.$el.getRootNode()`\n        // inside of the mounted hook, which is important for copying global styles to the shadow dom.\n        // const tempContainer = document.createElement('div')\n        // this.shadowRoot.appendChild(tempContainer)\n\n        // tempContainer will be completely rewritten\n        this._wrapper.$mount()\n        // this._wrapper.$el.style.display = 'none'\n\n        if (wrapOptions.globalStyles) {\n          // all initial styles\n          cloneElementsToShadowRoot(\n            this.shadowRoot,\n            getAllStyles(\n              wrapOptions.globalStyles.target,\n              wrapOptions.globalStyles.selector,\n              wrapOptions.globalStyles.filter\n            )\n          )\n\n          // all added styles\n          observeStyleChanges(\n            (elements) => {\n              cloneElementsToShadowRoot(this.shadowRoot, elements)\n            },\n            wrapOptions.globalStyles.target,\n            wrapOptions.globalStyles.selector,\n            wrapOptions.globalStyles.filter,\n            wrapOptions.globalStyles.observeOptions\n          )\n        }\n\n        // vue scoped styles need a micro-task to apply stylings\n        setTimeout(() => this.shadowRoot.appendChild(this._wrapper.$el))\n      } else {\n        callHooks(this.vueComponent, 'activated')\n      }\n    }\n\n    disconnectedCallback() {\n      if (\n        this._wrapper &&\n        this._wrapper.ShadyDOMSlotsHack_deregisterSetIntervalListener\n      ) {\n        this._wrapper.ShadyDOMSlotsHack_deregisterSetIntervalListener()\n      }\n\n      callHooks(this.vueComponent, 'deactivated')\n    }\n  }\n\n  if (!isAsync) {\n    initialize(Component)\n  }\n\n  return CustomElement\n}\n"],"names":["camelizeRE","camelize","str","replace","_","c","toUpperCase","hyphenateRE","hyphenate","toLowerCase","getInitialProps","propsList","res","forEach","key","undefined","cloneElementsToShadowRoot","shadowRoot","elements","el","appendChild","cloneNode","getAllStyles","target","selector","filter","Array","prototype","slice","call","querySelectorAll","observeStyleChanges","callback","observeOptions","MutationObserver","mutations","observer","mutation","matchedElements","addedNodes","node","matches","length","observe","injectHook","options","hook","concat","unshift","callHooks","vm","$options","createCustomEvent","name","args","CustomEvent","bubbles","cancelable","detail","isBoolean","val","test","String","isNumber","convertAttributeValue","value","type","endsWith","parsed","parseFloat","isNaN","JSON","parse","e","toVNodes","h","children","i","l","push","toVNode","nodeType","data","trim","attrs","getAttributes","domProps","innerHTML","slot","tagName","attributes","attr","nodeName","nodeValue","Vue","Component","hyphenatedPropsList","camelizedPropsList","camelizedPropsMap","wrapOptions","isAsync","cid","isInitialized","globalStyles","defaults","document","head","childList","subtree","initialize","isArray","props","Object","keys","jsonMapping","shouldBeSerializable","jsonProps","reduce","coll","propName","sourceProp","map","originalPropsAsObject","emit","this","$emit","_this","$root","customElement","dispatchEvent","_this2","defineProperty","CustomElement","get","_wrapper","set","newVal","enumerable","configurable","syncAttribute","jsonSuffixed","camelized","hasAttribute","getAttribute","window","ShadyDOM","observeChildren","_this3","ShadyDOMSlotsHack_slotsPassedToWrapper","ShadyDOMSlotsHack_setInterval","listeners","add","handler","id","Math","floor","random","_this4","start","remove","idToRemove","splice","findIndex","stop","intervalId","setInterval","clearInterval","updateSlotChildren","ShadyDOMSlotsHack_deregisterSetIntervalListener","self","attachShadow","mode","slotChildren","render","ref","initShadyDOMCompatability","hasChildrenChange","m","attributeName","_this5","characterData","freeze","$createElement","childNodes","Promise","resolve","initDone","init","_isMounted","vueComponent","syncInitialAttributes","_this6","then","resolved","__esModule","Symbol","toStringTag","default","$mount","setTimeout","$el","$refs","inner","HTMLElement"],"mappings":"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"}